const { contextBridge, ipcRenderer } = require('electron');

contextBridge.exposeInMainWorld('electronAPI', {
    runCheckIn: () => ipcRenderer.invoke('run-checkin'),
    runPointMart: () => ipcRenderer.invoke('run-pointmart'),
    runRoulette: () => ipcRenderer.invoke('run-roulette'),
    runEvent: () => ipcRenderer.invoke('run-event'),
    runDetection: () => ipcRenderer.invoke('run-detection'),
    runCreatePost: () => ipcRenderer.invoke('run-createpost'),
    onLog: (callback) => ipcRenderer.on('log', (_event, data) => callback(data.type, data.message)),
    onStatusUpdate: (callback) => ipcRenderer.on('status-update', (event, { type, status }) => callback(type, status)),
    onScrapeProgress: (callback) => ipcRenderer.on('scrape-progress', (_event, data) => callback(data)),
    onScrapeResults: (callback) => ipcRenderer.on('scrape-results', (_event, results) => callback(results)),
    onScrapeError: (callback) => ipcRenderer.on('scrape-error', (_event, error) => callback(error)),
    send: (channel, data) => ipcRenderer.send(channel, data),
    on: (channel, func) => ipcRenderer.on(channel, (event, ...args) => func(...args)),
    runSettlement0: () => ipcRenderer.invoke('run-settlement0'),
    runSettlement1: () => ipcRenderer.invoke('run-settlement1'),
    runSettlement2: () => ipcRenderer.invoke('run-settlement2'),
    runSettlement3: () => ipcRenderer.invoke('run-settlement3'),
    runSettlement4: () => ipcRenderer.invoke('run-settlement4'),
    runSettlement5: () => ipcRenderer.invoke('run-settlement5'),
    runSettlement6Zen: () => ipcRenderer.invoke('run-settlement6-zen'),
    runSettlement6Build: () => ipcRenderer.invoke('run-settlement6-build'),
    onSettlementProgress0: (callback) => ipcRenderer.on('settlement-progress0', (_event, data) => callback(data)),
    onSettlementProgress1: (callback) => ipcRenderer.on('settlement-progress1', (_event, data) => callback(data)),
    onSettlementProgress2: (callback) => ipcRenderer.on('settlement-progress2', (_event, data) => callback(data)),
    onSettlementProgress3: (callback) => ipcRenderer.on('settlement-progress3', (_event, data) => callback(data)),
    onSettlementProgress4: (callback) => ipcRenderer.on('settlement-progress4', (_event, data) => callback(data)),
    onSettlementProgress5: (callback) => ipcRenderer.on('settlement-progress5', (_event, data) => callback(data)),
    onSettlementProgress6Zen: (callback) => ipcRenderer.on('settlement-progress6-zen', (_event, data) => callback(data)),
    onSettlementProgress6Build: (callback) => ipcRenderer.on('settlement-progress6-build', (_event, data) => callback(data)),
    runExchange: () => ipcRenderer.invoke('run-exchange'),
    runSettlement0Lava: () => ipcRenderer.invoke('run-settlement0-lava'),
    runSettlement0Named: () => ipcRenderer.invoke('run-settlement0-named'),
    runSettlement0Pandora: () => ipcRenderer.invoke('run-settlement0-pandora'),
    runSettlement1Nimo: () => ipcRenderer.invoke('run-settlement1-nimo'),
    runSettlement1Bankcs: () => ipcRenderer.invoke('run-settlement1-bankcs'),
    runSettlement1Bankking: () => ipcRenderer.invoke('run-settlement1-bankking'),
    runSettlement1Heavencs: () => ipcRenderer.invoke('run-settlement1-heavencs'),
    runSettlement1Heavenking: () => ipcRenderer.invoke('run-settlement1-heavenking'),
    runSettlement2Samsung: () => ipcRenderer.invoke('run-settlement2-samsung'),
    runSettlement2Seven: () => ipcRenderer.invoke('run-settlement2-seven'),
    runSettlement2Hyungjae: () => ipcRenderer.invoke('run-settlement2-hyungjae'),
    runSettlement2Nimo: () => ipcRenderer.invoke('run-settlement2-nimo'),
    runSettlement2Kkobuki: () => ipcRenderer.invoke('run-settlement2-kkobuki'),
    runSettlement2Hawaii: () => ipcRenderer.invoke('run-settlement2-hawaii'),
    runSettlement3Kkobuki: () => ipcRenderer.invoke('run-settlement3-kkobuki'),
    runSettlement3Nimo: () => ipcRenderer.invoke('run-settlement3-nimo'),
    runSettlement3Hyungjae: () => ipcRenderer.invoke('run-settlement3-hyungjae'),
    runSettlement3Hawaii: () => ipcRenderer.invoke('run-settlement3-hawaii'),
    runSettlement3Samsung: () => ipcRenderer.invoke('run-settlement3-samsung'),
    runSettlement3Seven: () => ipcRenderer.invoke('run-settlement3-seven'),
    runSettlement4Build: () => ipcRenderer.invoke('run-settlement4-build'),
    runSettlement4Play: () => ipcRenderer.invoke('run-settlement4-play'),
    runSettlement4Zen: () => ipcRenderer.invoke('run-settlement4-zen')
});